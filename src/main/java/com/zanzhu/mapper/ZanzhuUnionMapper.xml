<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zanzhu.mapper.ZanzhuUnionMapper" >
  <resultMap id="BaseResultMap" type="com.zanzhu.pojo.ZanzhuUnion" >
    <id column="union_id" property="unionId" jdbcType="INTEGER" />
    <result column="union_name" property="unionName" jdbcType="VARCHAR" />
    <result column="union_school" property="unionSchool" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_email" property="contactEmail" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="contact_sex" property="contactSex" jdbcType="CHAR" />
    <result column="union_password" property="unionPassword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    union_id, union_name, union_school, contact_name, contact_email, contact_phone, contact_sex, 
    union_password
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zanzhu.pojo.ZanzhuUnionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zanzhu_union
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zanzhu_union
    where union_id = #{unionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zanzhu_union
    where union_id = #{unionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zanzhu.pojo.ZanzhuUnionExample" >
    delete from zanzhu_union
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zanzhu.pojo.ZanzhuUnion" >
    insert into zanzhu_union (union_id, union_name, union_school, 
      contact_name, contact_email, contact_phone, 
      contact_sex, union_password)
    values (#{unionId,jdbcType=INTEGER}, #{unionName,jdbcType=VARCHAR}, #{unionSchool,jdbcType=VARCHAR}, 
      #{contactName,jdbcType=VARCHAR}, #{contactEmail,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{contactSex,jdbcType=CHAR}, #{unionPassword,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zanzhu.pojo.ZanzhuUnion" >
    insert into zanzhu_union
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="unionId != null" >
        union_id,
      </if>
      <if test="unionName != null" >
        union_name,
      </if>
      <if test="unionSchool != null" >
        union_school,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactEmail != null" >
        contact_email,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="contactSex != null" >
        contact_sex,
      </if>
      <if test="unionPassword != null" >
        union_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="unionId != null" >
        #{unionId,jdbcType=INTEGER},
      </if>
      <if test="unionName != null" >
        #{unionName,jdbcType=VARCHAR},
      </if>
      <if test="unionSchool != null" >
        #{unionSchool,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactEmail != null" >
        #{contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactSex != null" >
        #{contactSex,jdbcType=CHAR},
      </if>
      <if test="unionPassword != null" >
        #{unionPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zanzhu.pojo.ZanzhuUnionExample" resultType="java.lang.Integer" >
    select count(*) from zanzhu_union
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zanzhu_union
    <set >
      <if test="record.unionId != null" >
        union_id = #{record.unionId,jdbcType=INTEGER},
      </if>
      <if test="record.unionName != null" >
        union_name = #{record.unionName,jdbcType=VARCHAR},
      </if>
      <if test="record.unionSchool != null" >
        union_school = #{record.unionSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactEmail != null" >
        contact_email = #{record.contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.contactSex != null" >
        contact_sex = #{record.contactSex,jdbcType=CHAR},
      </if>
      <if test="record.unionPassword != null" >
        union_password = #{record.unionPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zanzhu_union
    set union_id = #{record.unionId,jdbcType=INTEGER},
      union_name = #{record.unionName,jdbcType=VARCHAR},
      union_school = #{record.unionSchool,jdbcType=VARCHAR},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_email = #{record.contactEmail,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      contact_sex = #{record.contactSex,jdbcType=CHAR},
      union_password = #{record.unionPassword,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zanzhu.pojo.ZanzhuUnion" >
    update zanzhu_union
    <set >
      <if test="unionName != null" >
        union_name = #{unionName,jdbcType=VARCHAR},
      </if>
      <if test="unionSchool != null" >
        union_school = #{unionSchool,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactEmail != null" >
        contact_email = #{contactEmail,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="contactSex != null" >
        contact_sex = #{contactSex,jdbcType=CHAR},
      </if>
      <if test="unionPassword != null" >
        union_password = #{unionPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where union_id = #{unionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zanzhu.pojo.ZanzhuUnion" >
    update zanzhu_union
    set union_name = #{unionName,jdbcType=VARCHAR},
      union_school = #{unionSchool,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_email = #{contactEmail,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      contact_sex = #{contactSex,jdbcType=CHAR},
      union_password = #{unionPassword,jdbcType=VARCHAR}
    where union_id = #{unionId,jdbcType=INTEGER}
  </update>
</mapper>